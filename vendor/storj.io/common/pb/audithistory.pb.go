// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: audithistory.proto

package pb

import (
	fmt "fmt"
	math "math"
	time "time"

	proto "github.com/gogo/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type AuditHistory struct {
	Windows              []*AuditWindow `protobuf:"bytes,1,rep,name=windows,proto3" json:"windows,omitempty"`
	Score                float64        `protobuf:"fixed64,2,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *AuditHistory) Reset()         { *m = AuditHistory{} }
func (m *AuditHistory) String() string { return proto.CompactTextString(m) }
func (*AuditHistory) ProtoMessage()    {}
func (*AuditHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_2ab8e94de62e54ec, []int{0}
}
func (m *AuditHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuditHistory.Unmarshal(m, b)
}
func (m *AuditHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuditHistory.Marshal(b, m, deterministic)
}
func (m *AuditHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuditHistory.Merge(m, src)
}
func (m *AuditHistory) XXX_Size() int {
	return xxx_messageInfo_AuditHistory.Size(m)
}
func (m *AuditHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_AuditHistory.DiscardUnknown(m)
}

var xxx_messageInfo_AuditHistory proto.InternalMessageInfo

func (m *AuditHistory) GetWindows() []*AuditWindow {
	if m != nil {
		return m.Windows
	}
	return nil
}

func (m *AuditHistory) GetScore() float64 {
	if m != nil {
		return m.Score
	}
	return 0
}

type AuditWindow struct {
	WindowStart          time.Time `protobuf:"bytes,1,opt,name=window_start,json=windowStart,proto3,stdtime" json:"window_start"`
	OnlineCount          int32     `protobuf:"varint,2,opt,name=online_count,json=onlineCount,proto3" json:"online_count,omitempty"`
	TotalCount           int32     `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AuditWindow) Reset()         { *m = AuditWindow{} }
func (m *AuditWindow) String() string { return proto.CompactTextString(m) }
func (*AuditWindow) ProtoMessage()    {}
func (*AuditWindow) Descriptor() ([]byte, []int) {
	return fileDescriptor_2ab8e94de62e54ec, []int{1}
}
func (m *AuditWindow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuditWindow.Unmarshal(m, b)
}
func (m *AuditWindow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuditWindow.Marshal(b, m, deterministic)
}
func (m *AuditWindow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuditWindow.Merge(m, src)
}
func (m *AuditWindow) XXX_Size() int {
	return xxx_messageInfo_AuditWindow.Size(m)
}
func (m *AuditWindow) XXX_DiscardUnknown() {
	xxx_messageInfo_AuditWindow.DiscardUnknown(m)
}

var xxx_messageInfo_AuditWindow proto.InternalMessageInfo

func (m *AuditWindow) GetWindowStart() time.Time {
	if m != nil {
		return m.WindowStart
	}
	return time.Time{}
}

func (m *AuditWindow) GetOnlineCount() int32 {
	if m != nil {
		return m.OnlineCount
	}
	return 0
}

func (m *AuditWindow) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func init() {
	proto.RegisterType((*AuditHistory)(nil), "audithistory.AuditHistory")
	proto.RegisterType((*AuditWindow)(nil), "audithistory.AuditWindow")
}

func init() { proto.RegisterFile("audithistory.proto", fileDescriptor_2ab8e94de62e54ec) }

var fileDescriptor_2ab8e94de62e54ec = []byte{
	// 258 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0x41, 0x4e, 0x84, 0x30,
	0x14, 0x86, 0xad, 0x93, 0x51, 0xf3, 0xca, 0xaa, 0x99, 0x05, 0xb2, 0x01, 0x67, 0xc5, 0xaa, 0x24,
	0x33, 0x27, 0x70, 0x5c, 0xe8, 0x1a, 0x4d, 0x8c, 0x6e, 0x26, 0xc0, 0x20, 0xd6, 0x40, 0x1f, 0xa1,
	0x8f, 0x4c, 0xbc, 0x85, 0x6b, 0x4f, 0xe4, 0x29, 0xf4, 0x2a, 0xa6, 0xad, 0x24, 0xb8, 0x7c, 0x7f,
	0xbf, 0x2f, 0xff, 0x5f, 0x10, 0xc5, 0x78, 0x50, 0xf4, 0xaa, 0x0c, 0xe1, 0xf0, 0x2e, 0xfb, 0x01,
	0x09, 0x45, 0x30, 0xcf, 0x22, 0x68, 0xb0, 0x41, 0xff, 0x12, 0xc5, 0x0d, 0x62, 0xd3, 0xd6, 0x99,
	0xbb, 0xca, 0xf1, 0x25, 0x23, 0xd5, 0xd5, 0x86, 0x8a, 0xae, 0xf7, 0xc0, 0xfa, 0x09, 0x82, 0x6b,
	0x2b, 0xdf, 0x79, 0x59, 0x6c, 0xe1, 0xfc, 0xa8, 0xf4, 0x01, 0x8f, 0x26, 0x64, 0xc9, 0x22, 0xe5,
	0x9b, 0x4b, 0xf9, 0xaf, 0xd0, 0xc1, 0x8f, 0x8e, 0xc8, 0x27, 0x52, 0xac, 0x60, 0x69, 0x2a, 0x1c,
	0xea, 0xf0, 0x34, 0x61, 0x29, 0xcb, 0xfd, 0xb1, 0xfe, 0x64, 0xc0, 0x67, 0xb8, 0xb8, 0x85, 0xc0,
	0x0b, 0x7b, 0x43, 0xc5, 0x40, 0x21, 0x4b, 0x58, 0xca, 0x37, 0x91, 0xf4, 0x13, 0xe5, 0x34, 0x51,
	0x3e, 0x4c, 0x13, 0x77, 0x17, 0x5f, 0xdf, 0xf1, 0xc9, 0xc7, 0x4f, 0xcc, 0x72, 0xee, 0xcd, 0x7b,
	0x2b, 0x8a, 0x2b, 0x08, 0x50, 0xb7, 0x4a, 0xd7, 0xfb, 0x0a, 0x47, 0x4d, 0xae, 0x75, 0x99, 0x73,
	0x9f, 0xdd, 0xd8, 0x48, 0xc4, 0xc0, 0x09, 0xa9, 0x68, 0xff, 0x88, 0x85, 0x23, 0xc0, 0x45, 0x0e,
	0xd8, 0xad, 0x9e, 0x85, 0xfd, 0xd0, 0x9b, 0x54, 0x98, 0x55, 0xd8, 0x75, 0xa8, 0xb3, 0xbe, 0x2c,
	0xcf, 0xdc, 0x88, 0xed, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa4, 0x78, 0x5c, 0x8c, 0x65, 0x01,
	0x00, 0x00,
}
